name: CI and CD Pipeline for Java Application

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    # Step 1: Checkout the code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up JDK 17
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    # Step 3: Build the Java application using Maven
    - name: Build with Maven
      run: mvn clean package

    # Step 4: Log in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Step 5: Build the Docker image
    - name: Build Docker image
      run: docker build . -t ${{ secrets.DOCKER_USERNAME }}/java-app:latest

    # Step 6: Push the Docker image to Docker Hub
    - name: Push Docker image to Docker Hub
      run: docker push ${{ secrets.DOCKER_USERNAME }}/java-app:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    # Step 1: Install kubectl manually
    - name: Install kubectl
      run: |
        curl -LO "https://dl.k8s.io/release/v1.28.0/bin/linux/amd64/kubectl"
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/

    # Step 2: Configure Kubernetes context
    - name: Configure Kubernetes context
      run: |
        kubectl config set-cluster my-cluster --server=${{ secrets.K8S_SERVER }} --certificate-authority=<(echo "${{ secrets.K8S_CA_CERT }}" | base64 -d)
        kubectl config set-credentials my-user --token=${{ secrets.K8S_TOKEN }}
        kubectl config set-context my-context --cluster=my-cluster --user=my-user --namespace=default
        kubectl config use-context my-context

    # Step 3: Deploy to Kubernetes
    - name: Deploy to Kubernetes
      run: |
        kubectl set image deployment/my-deployment my-container=${{ secrets.DOCKER_USERNAME }}/java-app:latest
        kubectl rollout status deployment/my-deployment
